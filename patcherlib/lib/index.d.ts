/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
import CoreSettings from './core/CoreSettings';
import clientInterface from './core/clientInterface';
import client from './core/client';
import abilityTags from './core/constants/abilityConstants/abilityTags';
import buildUIMode from './core/constants/buildUIMode';
import channelId from './core/constants/channelId';
import emotes from './core/constants/emotes';
import soundEvents from './core/constants/soundEvents';
import tagConstraintType from './core/constants/tagConstraintType';
import gearSlot from './core/constants/gearSlot';
import plotPermissions from './core/constants/plotPermissions';
import attributeType from './core/constants/attributeType';
import warbandRoles from './core/constants/warbandRoles';
import warbandRanks from './core/constants/warbandRanks';
import warbandPermissions from './core/constants/warbandPermissions';
import * as core from './core/core';
export * from './core/core';
import * as webAPI from './webAPI';
import * as restAPI from './restapi';
export * from './webAPI/definitions';
export * from './groups';
export * from './building';
import * as events from './events';
import * as signalr from './signalR';
export * from './slashCommands';
import * as slashCommandsExports from './slashCommands';
import * as utils from './utils';
import * as ql from './graphql';
import * as components from './components';
export * from './components';
declare const _default: {
    registerSlashCommand(command: string, helpText: string, callback: (args: string) => void): void;
    unregisterSlashCommand(command: string): void;
    parseMessageForSlashCommand(command: string): boolean;
    getSlashCommands(): slashCommandsExports.SlashCommand[];
    CoreSettings: typeof CoreSettings;
    client: clientInterface;
    abilityTags: typeof abilityTags;
    buildUIMode: typeof buildUIMode;
    channelId: typeof channelId;
    emotes: typeof emotes;
    soundEvents: {
        CANCEL_ABILITY: number;
        LOCAL_PLAYER_BEGIN_CAST: number;
        LOCAL_PLAYER_BEGIN_SWING: number;
        LOCAL_PLAYER_DEATH: number;
        LOCAL_PLAYER_SPAWN: number;
        LOCAL_PLAYER_TOOK_DAMAGE: number;
        PLAY_FOOTSTEP_LEATHERBOOT_DIRT: number;
        PLAY_FOOTSTEP_METALBOOT_DIRT: number;
        PLAY_FOOTSTEP_METALBOOT_WITHMETALARMOR_DIRT: number;
        PLAY_GENERIC_PROJECTILE: number;
        PLAY_GENERIC_PROJECTILE_HIT: number;
        PLAY_INSTRUMENT_ALBION_HORNBASSMOD_LONG_DISTANT_C3_MEDIUMV: number;
        PLAY_LOADINGSCREEN: number;
        PLAY_LOADINGSCREEN_COMPLETE: number;
        PLAY_MAINMENU: number;
        PLAY_MELEE_IMPACT: number;
        PLAY_NATUREAMBIENCE: number;
        PLAY_SFX_ABILITY_ACTIVATE_SWOOSH_LOCALPLAYER: number;
        PLAY_SFX_ABILITY_CHARGING_LOOP: number;
        PLAY_SFX_ABILITY_CONE_STONE_ACTIVATE: number;
        PLAY_SFX_ABILITY_DART_STONE_ACTIVATE: number;
        PLAY_SFX_ABILITY_DIRECT_STONE_ACTIVATE: number;
        PLAY_SFX_ABILITY_HEALING_BANDAGE_END: number;
        PLAY_SFX_ABILITY_HEALING_BANDAGE_START: number;
        PLAY_SFX_ABILITY_TOUCH_STONE_ACTIVATE: number;
        PLAY_SFX_ABILITY_WAVE_STONE_ACTIVATE: number;
        PLAY_UI_ABILITYCRAFTING_ADDSELECTION: number;
        PLAY_UI_ABILITYCRAFTING_BUILD: number;
        PLAY_UI_ABILITYCRAFTING_RESET: number;
        PLAY_UI_ABILITYCRAFTING_SIDEPANEL_OPEN: number;
        PLAY_UI_MENU_BANESELECT: number;
        PLAY_UI_MENU_BOONSELECT: number;
        PLAY_UI_MENU_CHARACTERSELECT_CHANGE: number;
        PLAY_UI_MENU_CREATENEWCHARACTER: number;
        PLAY_UI_MENU_GENERALCONFIRM: number;
        PLAY_UI_MENU_GENERICSELECT: number;
        PLAY_UI_MENU_PREVIEWREALM_ARTHURIAN: number;
        PLAY_UI_MENU_PREVIEWREALM_TDD: number;
        PLAY_UI_MENU_PREVIEWREALM_VIKING: number;
        PLAY_UI_MENU_SELECTREALM: number;
        PLAY_UI_MENU_SERVERSELECT: number;
        PLAY_UI_MENUSTATE_CLOSED: number;
        PLAY_UI_MENUSTATE_OPEN: number;
        PLAY_UI_SPELLBOOK_DELETESPELL: number;
        PLAY_UI_SPELLBOOK_OPEN: number;
        PLAY_UI_SPELLBOOK_PAGEFLIP_BACKWARD: number;
        PLAY_UI_SPELLBOOK_PAGEFLIP_FORWARD: number;
        PLAY_UI_SPELLBOOK_PUTAWAY: number;
        PLAYER_BEGIN_CAST: number;
        PLAYER_BEGIN_SWING: number;
        PLAYER_DEATH: number;
        PLAYER_SPAWN: number;
        PLAYER_TOOK_DAMAGE: number;
        SET_STATE_CHARACTERCREATION_ATTRIBUTES: number;
        SET_STATE_CHARACTERCREATION_BOONSANDBANES: number;
        SET_STATE_CHARACTERCREATION_PREVIEW_ARTHURIAN: number;
        SET_STATE_CHARACTERCREATION_PREVIEW_TDD: number;
        SET_STATE_CHARACTERCREATION_PREVIEW_VIKING: number;
        SET_STATE_CHARACTERCREATION_RACE: number;
        SET_STATE_CHARACTERCREATION_SERVERSELECT: number;
        STOP_UI_MENU_PREVIEWREALM: number;
        PLAY_MUSIC_SCENARIO_VICTORY: number;
        PLAY_MUSIC_SCENARIO_DEFEAT: number;
        PLAY_SCENARIO_UI_WIDGET_ROUNDOVER: number;
        PLAY_MUSIC_SCENARIO_END_CLOSEWINDOW: number;
        PLAY_TEST_BEEP_2D: number;
        PLAY_UI_VOX_START_GRIND: number;
        PLAY_UI_VOX_START_SHAPE: number;
        PLAY_UI_VOX_START_REPAIR: number;
        PLAY_UI_VOX_COLLECT: number;
        PLAY_UI_VOX_START_PURIFY: number;
        PLAY_UI_VOX_CLEAR: number;
        PLAY_UI_VOX_ADDINGREDIENT: number;
        PLAY_UI_VOX_START_BLOCK: number;
        PLAY_UI_VOX_START_SALVAGE: number;
        PLAY_UI_VOX_START_MAKE: number;
        PLAY_UI_VOX_GENERICBUTTON: number;
        PLAY_UI_VOX_REMOVELAST: number;
    };
    tagConstraintType: typeof tagConstraintType;
    gearSlot: typeof gearSlot;
    plotPermissions: typeof plotPermissions;
    attributeType: typeof attributeType;
    warbandRoles: typeof warbandRoles;
    warbandRanks: typeof warbandRanks;
    warbandPermissions: typeof warbandPermissions;
    components: typeof components;
};
export default _default;
export { webAPI, restAPI, utils, CoreSettings, clientInterface, client, abilityTags, buildUIMode, channelId, emotes, soundEvents, tagConstraintType, gearSlot, plotPermissions, attributeType, warbandRanks, warbandRoles, warbandPermissions, core, signalr, events, ql, };
